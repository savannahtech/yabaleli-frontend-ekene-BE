services:
  backend:
    build:
      context: .
    image: conference-app:${APP_TAG:-latest}
    container_name: conference-app
    depends_on:
      - db
      - redis
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
      - JWT_DEFAULT_EXPIRES_IN=${JWT_DEFAULT_EXPIRES_IN}
      - JWT_ACCESS_TOKEN_EXPIRES_IN=${JWT_ACCESS_TOKEN_EXPIRES_IN}
      - JWT_REFRESH_TOKEN_EXPIRES_IN=${JWT_REFRESH_TOKEN_EXPIRES_IN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - COOKIES_SECRET_KEY=${COOKIES_SECRET_KEY}
      - COOKIES_MAX_AGE=${COOKIES_MAX_AGE}
      - HASHING_SALT=${HASHING_SALT}
      - OPEN_API_KEY=${OPEN_API_KEY}
    volumes:
      - /usr/src/app
      - /usr/src/app/node_modules
  
  db:
    image: postgres:16
    restart: always
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - .dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: always
    container_name: redis-server
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - .redisdata:/data
